WEBLINC.omniauthFacebook = (function () {
    'use strict';

    var setup = function () {
            window.fbAsyncInit = function() {
                FB.init({
                    appId  : <%= Weblinc.config.facebook_key %>,
                    status : true, // check login status
                    cookie : true, // enable cookies to allow the server to access the session
                    xfbml  : true  // parse XFBML
                });
            };

            (function(d) {
                var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}
                js = d.createElement('script'); js.id = id; js.async = true;
                js.src = "//connect.facebook.net/en_US/all.js";
                d.getElementsByTagName('head')[0].appendChild(js);
            }(document));
        },

        listenForLogin = function ($button) {
            $button.on('click', function (e) {
                e.preventDefault();
                FB.getLoginStatus(function(response) {
                    if (response.status === 'connected') {
                        window.location = '/auth/facebook';
                    } else if (response.status === 'not_authorized') {
                        FB.login(function(response) {
                            if (response.authResponse) {
                                $('#login').html('Connected!');
                                window.location = '/auth/facebook';
                            }
                        });
                    } else {
                        FB.login(function(response) {
                            if (response.authResponse) {
                                $('#login').html('Connected!');
                                window.location = '/auth/facebook';
                            }
                        });
                    }
                });
            });
        },

        listenForCheckout = function ($button) {
            $button.on('click', function (e) {
                e.preventDefault();
                FB.getLoginStatus(function(response) {
                    if (response && response.status === 'connected') {
                        FB.logout(function(response) {
                            FB.login(function(response) {
                                if (response.authResponse) {
                                    window.location = '/auth/facebook';
                                }
                            });
                        });
                    } else {
                        FB.login(function(response) {
                            if (response.authResponse) {
                                window.location = '/auth/facebook';
                            }
                        });
                    }
                });
            });
        },

        listenForLogout = function ($button) {
            $button.on('click', function (e) {
                e.preventDefault();
                FB.getLoginStatus(function(response) {
                    if (response && response.status === 'connected') {
                        if (confirm('When you disconnect your account with Facebook you must reset and create your <%= Weblinc::Site.current.name %> password.')) {
                            FB.logout(function(response) {
                                window.location = '/logout';
                            });
                        } else {
                            // Do nothing.
                        }
                    }
                });
            });
        },

        init = function ($scope) {
            var $loginButton = $('#login #facebook', $scope),
                $checkoutButton = $('#login #fbcheckout', $scope),
                $logoutButton = $('#logout #facebook', $scope);

            setup();

            if (!_.isEmpty($loginButton)) {
                listenForLogin($loginButton);
            }

            if (!_.isEmpty($checkoutButton)) {
                listenForCheckout($checkoutButton);
            }

            if (!_.isEmpty($logoutButton)) {
                listenForLogout($logoutButton);
            }

        };

    WEBLINC.modules.onDomReady(init);
    WEBLINC.modules.onDomUpdate(init);

    return {
        init: init
    };
}());
